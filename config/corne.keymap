/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE  &kp Q           &kp W        &kp E           &kp R             &kp T         &kp Y      &kp U              &kp I            &kp O        &kp P                    &kp LEFT_BRACKET
&kp TAB    &mt LEFT_GUI A  &mt LCTRL S  &mt LEFT_ALT D  &mt LEFT_SHIFT F  &kp G         &kp H      &mt RIGHT_SHIFT J  &mt RIGHT_ALT K  &mt RCTRL L  &mt RIGHT_GUI SEMICOLON  &kp SQT
&kp CAPS   &kp Z           &kp X        &kp C           &kp V             &kp B         &kp N      &kp M              &kp COMMA        &kp DOT      &kp FSLH                 &kp RIGHT_BRACKET
                                        &lt 3 ESCAPE    &lt 1 LEFT_GUI    &kp RETURN    &kp SPACE  &mo 2              &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3         &kp N4             &kp N5                  &kp N6    &kp N7    &kp N8      &kp N9     &kp N0  &trans
&trans  &trans  &trans  &kp C_BRI_UP   &kp C_VOLUME_UP    &kp RG(RS(NUMBER_4))    &kp LEFT  &kp DOWN  &kp UP      &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &kp C_BRI_DEC  &kp C_VOLUME_DOWN  &kp RG(RS(N5))          &trans    &trans    &trans      &trans     &trans  &trans
                        &trans         &trans             &trans                  &trans    &trans    &kp DELETE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH              &kp DLLR               &kp PRCNT         &kp CARET  &kp AMPS          &kp KP_MULTIPLY    &kp LPAR  &kp RPAR       &kp BSPC
&trans     &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE    &kp EQUAL  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans    &kp HOME       &kp END
&trans     &trans    &trans  &kp BACKSLASH         &kp PIPE               &kp MINUS         &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans    &kp PAGE_DOWN  &kp PAGE_UP
                             &trans                &trans                 &trans            &trans     &trans            &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5      &kp F6    &kp F7              &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &bt BT_NXT  &trans    &kp K_CONTEXT_MENU  &trans  &trans  &trans   &trans   &trans
&trans      &trans        &trans        &trans        &trans      &trans    &trans              &trans  &trans  &trans   &trans   &trans
                                        &trans        &trans      &trans    &trans              &trans  &trans
            >;
        };
    };
};
